server.servlet.session.timeout=1200

#mysql
spring.datasource.url=jdbc:mysql://192.168.41.17:3306/uap?createDatabaseIfNotExist=true&autoReconnect=true&useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&serverTimezone=GMT%2B8
spring.datasource.username=appAccPayor
spring.datasource.password=iTDYVBtI6MX4NQ3Er2Oh

uap.adminName=jt_admin

spring.cloud.nacos.discovery.group=MICROSERVICE
spring.cloud.nacos.discovery.namespace=54c39cfe-d1c4-4022-a94b-a3486c5927fc
spring.cloud.nacos.discovery.server-addr=nacos.diligrp.com:8848

uap.contextPath=https://uap.diligrp.com
project.serverPath=https://uid.diligrp.com

# Sentinel
spring.cloud.sentinel.eager=true
spring.cloud.sentinel.transport.heartbeat-interval-ms=2000

#在使用 Endpoint 特性之前需要在 Maven 中添加 spring-boot-starter-actuator 依赖，并在配置中允许 Endpoints 的访问。
#暴露的 endpoint 路径为 /actuator/sentinel
management.endpoints.web.exposure.include=*

# Sentinel 控制台地址
spring.cloud.sentinel.transport.dashboard=sentinel.diligrp.com:8201
# 应用与Sentinel控制台交互的端口，应用本地会起一个该端口占用的HttpServer
spring.cloud.sentinel.transport.port=8202

spring.cloud.sentinel.datasource.ds1.nacos.server-addr=nacos.diligrp.com:8848
spring.cloud.sentinel.datasource.ds1.nacos.dataId=dili-uid-flow-rules.json
spring.cloud.sentinel.datasource.ds1.nacos.groupId=SENTINEL_GROUP
spring.cloud.sentinel.datasource.ds1.nacos.namespace=Sentinel
spring.cloud.sentinel.datasource.ds1.nacos.ruleType=flow